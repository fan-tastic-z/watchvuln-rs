database:
  # Database connection URI
  uri: {{ get_env(name="DATABASE_URL", default="postgres://postgres:123456@localhost:5432/watchvuln") }}
  # When enabled, the sql query will be logged.
  enable_logging: false
  # Set the timeout duration when acquiring a connection.
  connect_timeout: 500
  # Set the idle duration before closing a connection.
  idle_timeout: 500
  # Minimum number of connections for a pool.
  min_connections: 1
  # Maximum number of connections for a pool.
  max_connections: 1

task:
  # every day 7:00-22:00 interval 30 minute Execute task
  cron_config: "0 */30 7-21 * * *"

# Application logging configuration
logger:
  # Enable or disable logging.
  enable: true
  # Enable pretty backtrace (sets RUST_BACKTRACE=1)
  pretty_backtrace: true
  # Log level, options: trace, debug, info, warn or error.
  level: info
  # Define the logging format. options: compact, pretty or Json
  format: compact
  # By default the logger has filtering only logs that came from your code or logs that came from `loco` framework. to see all third party libraries
  # Uncomment the line below to override to see all third party libraries you can enable this config and override the logger filters.
  # override_filter: trace

# Application push message configuration, Now just support tg bot
tg_bot:
  chat_id: {{ get_env(name="TG_CHAT_ID", default=0) }}
  token: {{ get_env(name="TG_TOKEN", default="") }}

ding_bot:
  access_token: {{ get_env(name="DING_ACCESS_TOKEN", default="") }}
  secret_token: {{ get_env(name="DING_SECRET_TOKEN", default="") }}

lark_bot:
  access_token: {{ get_env(name="LARK_ACCESS_TOKEN", default="") }}
  secret_token: {{ get_env(name="LARK_SECRET_TOKEN", default="") }}
